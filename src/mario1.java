
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ekjot
 */
public class mario1 extends javax.swing.JFrame {

    /**
     * Creates new form mario1
     */
    public mario1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tp = new javax.swing.JTextPane();
        lbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jButton1.setText("start");
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tp.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        tp.setEnabled(false);
        tp.setFocusable(false);
        jScrollPane2.setViewportView(tp);

        lbl.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        lbl.setFocusable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(96, 96, 96)
                        .addComponent(lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    String a[][]=new String[10][60];
   int old_pole_dist=6,man_pos=8,jump=0;
    
    
    ActionListener screenListener=new ActionListener()
    {
        @Override
        public void actionPerformed(ActionEvent e)
        {
            print_to_screen();
        }
    };
    
    ActionListener poleListener=new ActionListener()
    {
        @Override
        public void actionPerformed(ActionEvent e)
        {
            update_pole();
            new_pole();
        }
    };
    
    ActionListener manListener=new ActionListener()
    {
        @Override
        public void actionPerformed(ActionEvent e)
        {
            if(a[man_pos][2].equals(":"))
            {
                screen.stop();
                pole.stop();
                man.stop();
                lbl.setText("oppsss");
            }
            else
            {
                if(jump>0)
                {
                    update_man();
                }
                a[man_pos][2]="i";
            }
        }
    };
    
    Timer screen=new Timer(50,screenListener);
     Timer pole=new Timer(200,poleListener);
      Timer man=new Timer(100,manListener);
    
    void reset()
    {
        old_pole_dist=6;
        man_pos=8;
        jump=0;
        for(int i=0;i<10;i++)
        {
            for(int j=0;j<60;j++)
            {
                a[i][j]=" ";
                if(i==9)
                {
                    a[i][j]=":";
                }
            }
        }
        a[8][2]="i";
        a[8][59]=":";
        a[7][59]=":";
        a[6][59]=":";
        old_pole_dist=0;
        lbl.setText("");
    }
    
    void print_to_screen()
    {
        String str="";
        for(int i=0;i<10;i++)
        {
            for(int j=0;j<60;j++)
            {
                str=str+a[i][j];
            }
            str=str+"\n";
        }
        tp.setText(str);
    }
    
    void update_pole()
    {
        for(int i=0;i<9;i++)
        {
            for(int j=0;j<60;j++)
            {
                if(j!=0)
                {
                    if(a[i][j].equals(":"))
                    {
                        a[i][j-1]=":";
                        a[i][j]=" ";
                    }
                }
                else
                {
                    a[i][j]=" ";
                }
            }
        }
        old_pole_dist++;
    }
    
    void update_man()
    {
        a[man_pos][2]=" ";
        if(jump==1)
        {
            man_pos--;
        }
        else if(jump==2)
        {
            man_pos++;
        }
        if(man_pos==2)
        {
            jump=2;
        }
        else if(man_pos==8)
        {
            jump=0;
        }
    }
    
    void new_pole()
    {
        int i=0;
            String temp=""+Math.random();
            temp=temp.substring(2,4);
            i=Integer.parseInt(temp);
            
            if((i>=0&&i<=25)&&(old_pole_dist>30))
            {
                a[8][59]=":";
                a[7][59]=":";
                a[6][59]=":";
                old_pole_dist=0;
            }
    }
    
  
    
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        reset();
        screen.start();
        pole.start();
        man.start();
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed

        if(man_pos==8){jump++;}
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mario1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mario1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mario1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mario1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mario1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl;
    private javax.swing.JTextPane tp;
    // End of variables declaration//GEN-END:variables
}
